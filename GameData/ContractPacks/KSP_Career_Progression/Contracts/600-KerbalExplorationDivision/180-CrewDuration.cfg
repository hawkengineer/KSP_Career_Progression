// *************************** Crew Duration in Space
// 
// Launch and keep the Kerbals in Space for the required durations
//

CONTRACT_TYPE
{
	name 			= CrewDuration
	sortKey 		= 180
	group 			= KerbalExplorationDivision
	title			= #KED_CrewDuration_Title
	//genericTitle 	= 
	topic			= Exploration
	notes			= #KED_CrewDuration_Notes
	synopsis 		= #KED_CrewDuration_Synopsis
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 0
	maxExpiry		= 0
	//deadline		= 90
	maxCompletions 	= 0
	maxSimultaneous = 1
	targetBody		= HomeWorld()
	
	description 		= We need to push our ability to stay and work in orbit.  Launch a Kerbal into orbit and keep our kerbalnaut alive for @/targetDurationNum days
	genericDescription 	= #KED_CrewDuration_Generic
	completedMessage	= #KED_CrewDuration_Complete
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Career_Progression:rewardScience * 0.1				// Science Reward
	rewardReputation	= @KSP_Career_Progression:rewardRep * 0.2					// Reputation Increase
	rewardFunds			= @KSP_Career_Progression:baseComp * 0.8 + @/bonus			// Funds
	advanceFunds		= @KSP_Career_Progression:baseAdv * 0.5						// Adv Funds 
	failureReputation 	= @rewardReputation * 0.7									// Reputation
	failureFunds		= @rewardFunds * 1 											// Failure Funds
	
	// Contract Significance
	//
	//     Trivial
    //     Significant
    //     Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
    DATA
    {
        type = List<Duration>

        crewedDurations = [ 7d, 14d, 30d, 60d, 180d, 365d ]
    }
    DATA
    {
        type = List<float>
        crewedDurationsNum = [ 7, 14, 30, 60, 180, 365 ]
    }	
    DATA
	// Rewards	
    {
        type = List<float>
        fundsReward = [ 0.2, 0.4, 0.6, 0.8, 1.0, 1.2 ]
    }
    
    DATA
    {
        type = float

        currentIndex = DurationIndex
    }

    DATA
    {
        type = Duration
        title = Duration

        targetDuration = @crewedDurations.ElementAt(@currentIndex)
    }
    DATA
    {
        type = float

        targetDurationNum = @crewedDurationsNum.ElementAt(@currentIndex)
    }

    DATA
    {
        type = float

        currentRewards = @fundsReward.ElementAt(@currentIndex)
		bonus = @KSP_Career_Progression:baseComp * @currentRewards
    }	

	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = CrewOrbit
		title = Complete @contractType Contract
	}
    REQUIREMENT
    {
        type = Expression
        title = Crewed Duration

        expression = @/currentIndex < @/crewedDurations.Count()
    }

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
    PARAMETER
    {
        name = CrewDuration
        type = VesselParameterGroup
        title = Stay in space for @/targetDuration
		define = CrewDuration
        
        PARAMETER
        {
            name = durationInSpace
            type = All
            title = Stay in space for @/targetDuration
            
            disableOnStateChange = False
            
            PARAMETER
            {
                name = ReachState
                type = ReachState
                situation = ORBITING
                disableOnStateChange = False
            }
            PARAMETER
            {
                name = HasCrew
                type = HasCrew
                minCrew = 1
                disableOnStateChange = False
            }
            PARAMETER
            {
                name = Duration
                type = Duration
                duration = @/targetDuration
            }
        }
    }
	PARAMETER
	{
		name = KerbalDeaths
		type = KerbalDeaths
		vessel = CrewDuration
	}	



	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviors
	//
    BEHAVIOUR
    {
        name = IncrementIndex
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            DurationIndex = DurationIndex + 1
			CrewInSpaceDay = CrewInSpaceDay + crewedDurationsNum
        }
    }	
}

