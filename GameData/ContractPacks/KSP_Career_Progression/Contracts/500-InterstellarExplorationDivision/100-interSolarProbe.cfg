// *************************** Interstellar Probe to Other Suns
// 
// Launch and explore other solar systems
//

CONTRACT_TYPE
{
	name 			= interSolarProbe
	sortKey 		= 100
	group 			= InterstellarExplorationDivision
	title			= #IED_Title_SolarProbe
	genericTitle 	= #IED_Generic_SolarProbe
	topic			= Exploration
	notes			= #IED_Notes_SolarProbe
	synopsis 		= #IED_Notes_SolarProbe
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 5
	maxExpiry		= 15
	//deadline		= 90
	maxCompletions 	= 0
	maxSimultaneous = 1
	targetBody		= targetBodyValid1
	//
	description 		= #IED_Desc_SolarProbe
	genericDescription 	= #IED_GenDesc_SolarProbe
	completedMessage	= #IED_Complete_SolarProbe
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Career_Progression:rewardScience * 0.1				// Science Reward
	rewardReputation	= @KSP_Career_Progression:rewardRep * 0.2					// Reputation Increase
	rewardFunds			= @KSP_Career_Progression:baseComp * 0.8 + @/bonus			// Funds
	advanceFunds		= @KSP_Career_Progression:baseAdv * 0.5						// Adv Funds 
	failureReputation 	= @rewardReputation * 0.7									// Reputation
	failureFunds		= @rewardFunds * 1 											// Failure Funds
	
	// Contract Significance
	//
	//     Trivial
    //     Significant
    //     Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA_EXPAND
	{
		type 		= CelestialBody
		targetBody1	= @KSP_Career_Progression:intersellarSuns
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
	}	


	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = CrewOrbit
		title = Complete @contractType Contract
	}
    REQUIREMENT
    {
        type = Expression
        title = Crewed Duration

        expression = @/currentIndex < @/crewedDurations.Count()
    }

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
    PARAMETER
    {
        name = CrewDuration
        type = VesselParameterGroup
        title = Stay in space for @/targetDuration
		define = CrewDuration
        
        PARAMETER
        {
            name = durationInSpace
            type = All
            title = Stay in space for @/targetDuration
            
            disableOnStateChange = False
            
            PARAMETER
            {
                name = ReachState
                type = ReachState
                situation = ORBITING
                disableOnStateChange = False
            }
            PARAMETER
            {
                name = HasCrew
                type = HasCrew
                minCrew = 1
                disableOnStateChange = False
            }
            PARAMETER
            {
                name = Duration
                type = Duration
                duration = @/targetDuration
            }
        }
    }
	PARAMETER
	{
		name = KerbalDeaths
		type = KerbalDeaths
		vessel = CrewDuration
	}	



	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviors
	//
    BEHAVIOUR
    {
        name = IncrementIndex
        type = Expression

        CONTRACT_COMPLETED_SUCCESS
        {
            DurationIndex = DurationIndex + 1
			CrewInSpaceDay = CrewInSpaceDay + crewedDurationsNum
        }
    }	
}

