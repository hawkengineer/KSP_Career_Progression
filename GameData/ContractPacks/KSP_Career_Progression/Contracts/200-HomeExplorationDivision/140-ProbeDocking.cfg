// *************************** Automated Docking Contract
// 
// Goal is to launch a target vessel and launch a second vessel to dock with the first. 
//

CONTRACT_TYPE
{
	name 			= ProbeDocking
	sortKey 		= 140
	group 			= ExplorationSystemDivision
	title			= Perform automated docking with two probes
	//genericTitle 	= 
	topic			= Exploration
	notes			= Launch two separate probes and perform docking in orbit.
	synopsis 		= Launch two separate probes and perform docking in orbit.
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 0
	maxExpiry		= 0
	deadline		= 120
	maxCompletions 	= 1
	maxSimultaneous = 1
	targetBody		= HomeWorld()
	
	description 		= The engineering team made the recommendation that we need to develop our docking procedures.  Launch two separate probes that are capable of docking with each other and perform a docking operating in orbit.
	//genericDescription 	= 
	completedMessage	= Success! We completed our first docking operation between two probes!
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Career_Progression:rewardScience * 0.5				// Science Reward 
	rewardReputation	= @KSP_Career_Progression:rewardRep * 0.2					// Reputation Increase
	rewardFunds			= @KSP_Career_Progression:baseComp * 1.0					// Funds
	advanceFunds		= @KSP_Career_Progression:baseAdv * 1.0						// Adv Funds
	failureReputation 	= @rewardReputation * 0.3									// Reputation
	failureFunds		= @rewardFunds * 0.05										// Failure Funds
	
	// Contract Significance
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA
	{
		type = double
		upperAtmo = HomeWorld().FlyingAltitudeThreshold() / 1000
		karmanAlt = HomeWorld().AtmosphereAltitude() / 1000 - 20000
		alt2target = @/karmanAlt*1000
		title = Find altitude boundary for the upper Atmosphere and edge of lower space
	}	
	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = ProbeRecovery
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = DockingPort
		type = PartModuleUnlocked
		partModule = ModuleDockingNode
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = Vessel1
		type = VesselParameterGroup
		title = Vessel One for Docking
		define = Vessel1

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER
		{
			name = HasNoCrew
			type = HasCrew
			maxCrew = 0
			minCrew = 0
			title = Needs to be a probe (Uncrewed)
			hideChildren = true
		}
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			partModuleType = Dock
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = ORBITING
			title = Orbit @/targetBody
			//minApA = HomeWorld().AtmosphereAltitude() * 1.1
			disableOnStateChange = true
			hideChildren = true
		}
	}
	
	PARAMETER
	{
		name = Vessel2
		type = VesselParameterGroup
		title = Vessel Two for Docking
		define = Vessel2

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
        PARAMETER
        {
            name = IsNotVessel
            type = IsNotVessel

            vessel = Vessel1
        }
		PARAMETER
		{
			name = HasNoCrew
			type = HasCrew
			maxCrew = 0
			minCrew = 0
			title = Needs to be a probe (Uncrewed)
			hideChildren = true
		}
		PARAMETER
		{
			name = PartValidation
			type = PartValidation
			partModuleType = Dock
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = ORBITING
			title = Orbit @/targetBody
			disableOnStateChange = true
			hideChildren = true
		}
	}	
	PARAMETER
	{
		name = Rendezvous
		type = Rendezvous
		distance = 100
		title = Rendezvous two craft in Orbit within 100 meters
		hideChildren = true
		vessel = Vessel1
		vessel = Vessel2
		disableOnStateChange = true
		completeInSequence = true
	}
	PARAMETER
	{
		name = Docking
		type = Docking
		title = Dock two spacecraft in orbit
		vessel = Vessel1
		vessel = Vessel2
		hideChildren = true
		completeInSequence = true
	}


}

