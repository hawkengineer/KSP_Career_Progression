// *************************** Geostationary Satellite Contract
// 
// Goal is to launch a satellite into a Geostationary orbit
//

CONTRACT_TYPE
{
	name 			= GeoSat
	sortKey 		= 180
	group 			= ExplorationSystemDivision
	title			= Satellite into Geostationary Orbit
	//genericTitle 	= 
	topic			= Exploration
	notes			= Launch a satellite into the Geostationary orbit.
	synopsis 		= Launch a satellite into a Geostationary orbit of @targetBody
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 5
	maxExpiry		= 100
	deadline		= 120
	maxCompletions 	= 1
	maxSimultaneous = 1
	targetBody		= HomeWorld()
	
	description 		= You have launched the first artificial satellite into orbit, now it is time to try different types of orbits. Launch a satellite into a geostationary orbit!
	//genericDescription 	= 
	completedMessage	= Success! Our satellite is in geostationary orbit which will be useful for future communications relay satellites.
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Career_Progression:rewardScience * 0.5				// Science Reward 
	rewardReputation	= @KSP_Career_Progression:rewardRep * 0.3					// Reputation Increase
	rewardFunds			= @KSP_Career_Progression:baseComp * 0.8					// Funds
	advanceFunds		= @KSP_Career_Progression:baseAdv * 0.5						// Adv Funds
	failureReputation 	= @rewardReputation * 0.3									// Reputation
	failureFunds		= @rewardFunds * 0.05										// Failure Funds
	
	// Contract Significance
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//

	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = PolarSat
		title = Complete @contractType Contract
	}
	REQUIREMENT
	{
		name = SyncOrbit
		type = Expression
		title = Planet can home Geostationary Orbits
		expression = HomeWorld().CanHaveSynchronousOrbit(0) == true
	}	

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	PARAMETER
	{
		name = Geostationary
		type = VesselParameterGroup
		title = Geostationary Satellite
		define = Geostationary
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = GeostationaryOrbit
			type = ReachSpecificOrbit
			index = 0
			title = Achieve Geostationary Orbit
		}
	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//	
	BEHAVIOUR
	{
		name = GeostationaryOrbit
		type = OrbitGenerator
		RANDOM_ORBIT
		{
			type = STATIONARY
		}
	}	
	
}

