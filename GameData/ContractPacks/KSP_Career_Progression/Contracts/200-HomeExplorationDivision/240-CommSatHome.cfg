// *************************** Home Planet Communications Relay Network Contract
// 
// Goal is to launch and place a communications relay network satellite into orbit.
//

CONTRACT_TYPE
{
	name 			= CommSatHome
	sortKey 		= 240
	group 			= ExplorationSystemDivision
	title			= Launch and Place two Comm Relay Satellite around @targetBody
	genericTitle 	= Launch and place two comm relay satellites into orbit
	topic			= Exploration
	notes			= Build, launch and place two communications relay satellites in orbit.
	synopsis 		= Build a network of two relay satellites in orbit around @targetBody.
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 5
	maxExpiry		= 100
	deadline		= 120
	maxCompletions 	= 1
	maxSimultaneous = 1
	targetBody		= HomeWorld()
	
	description 		= We need global coverage for our missions at home and for exploring the nearby moons. Build two relay satellites and launch into orbit around @targetBody.
	genericDescription 	= We need global coverage for future missions, setup a two satellite relay network.
	completedMessage	= Success!  Mission control is connected and ready to support more missions!
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Career_Progression:rewardScience * 0.5				// Science Reward 
	rewardReputation	= @KSP_Career_Progression:rewardRep * 0.3					// Reputation Increase
	rewardFunds			= @KSP_Career_Progression:baseComp * 1.4					// Funds
	advanceFunds		= @KSP_Career_Progression:baseAdv * 0.6						// Adv Funds
	failureReputation 	= @rewardReputation * 0.3									// Reputation
	failureFunds		= @rewardFunds * 0.05										// Failure Funds
	
	// Contract Significance
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	DATA
	{
		type = double
		minRelayPower = 5000000 // HG-5 or equivalent
	}	
	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = GeoSat
		title = Complete @contractType Contract
	}

    REQUIREMENT
    {
        name = PartModuleTypeUnlocked
        type = PartModuleTypeUnlocked

        partModuleType = Antenna
        partModuleType = Generator
    }
	

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
    PARAMETER
    {
        name = CommSat1
        type = VesselParameterGroup

        define = CommSat I
        disableOnStateChange = false

		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
		
			vesselType = Relay
		}
        PARAMETER
        {
            name = IsNotVessel
            type = IsNotVessel

            vessel = CommSat II
        }

        PARAMETER
	    {
		    name = HasAntenna
		    type = HasAntenna
		    minAntennaPower = @/minRelayPower
		    antennaType = RELAY
		    notes = Don't forget to extend antennas that need extending!
	    }
		PARAMETER
        {
            name = Orbit
            type = Orbit

            // Minimum distance to have line of sight 
            minPeA = @/targetBody.Radius()

            // Pretty close to circular
            maxEccentricity = 0.004

            // Pretty close to equatorial
            maxInclination = 3
        }
    }    

    PARAMETER
    {
        name = CommSat2
        type = VesselParameterGroup

        define = CommSat II
        disableOnStateChange = false

		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
		
			vesselType = Relay
		}

        PARAMETER
	    {
		    name = HasAntenna
		    type = HasAntenna
		    minAntennaPower = @/minRelayPower
		    antennaType = RELAY
		    notes = Don't forget to extend antennas that need extending!
	    }

        PARAMETER
        {
            name = Orbit
            type = Orbit

            // Minimum distance to have line of sight for 3 satellites for Kerbin.
            minPeA = @/targetBody.Radius()

            // Pretty close to circular
            maxEccentricity = 0.004

            // Pretty close to equatorial
            maxInclination = 3
        }
    }    

    PARAMETER
    {
        name = Duration
        type = Duration

        duration = 2d

        preWaitText = Testing time after network up
        waitingText = Performing shake-out testing
        completionText = Shake-out testing completed
    }


	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//	

	
}

