// *************************** Lunar Comm Relay Mission
// 
// Goal for this contract configure at least two comm relay into lunar orbit for surface and orbital relay
//

CONTRACT_TYPE
{
	name 			= LunarRelay
	sortKey 		= 160
	group 			= LunarExplorationDivision
	title			= Setup a relay satellite into orbit around @/targetBody
	genericTitle 	= Setup a relay satellite into orbit around the moon.
	topic			= Exploration
	notes			= Build, deliver, and configure a relay satellite into orbit around @/targetBody  
	synopsis 		= Build, deliver, and configure a relay satellite into orbit around @/targetBody  
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 5
	maxExpiry		= 100
	deadline		= 200
	maxCompletions 	= 0
	maxSimultaneous = 1
	targetBody		=  @/targetBodyValid1
	
	description 		= We are planning to send more missions to explore @/targetBody and need better communications.  Deliver a communications relay satellite into orbit around @/targetBody.
	genericDescription 	= Setup a relay satellite into orbit around the moon.
	completedMessage	= Mission is complete, our mission controllers now have better communications with future missions to @/targetBody.
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Career_Progression:rewardScience * 0.5				// Science Reward 
	rewardReputation	= @KSP_Career_Progression:rewardRep * 0.3					// Reputation Increase
	rewardFunds			= @KSP_Career_Progression:baseComp * 0.7					// Funds
	advanceFunds		= @KSP_Career_Progression:baseAdv * 0.5						// Adv Funds
	failureReputation 	= @rewardReputation * 0.3									// Reputation
	failureFunds		= @rewardFunds * 0.05										// Failure Funds
	
	// Contract Significance
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	//
	DATA_EXPAND
	{
		type 		= CelestialBody
		targetBody1	= @LunarExplorationDivision:homeMoons
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
	}
	DATA
	{
		type = double
		minRelayPower = @KSP_Career_Progression:minRelayHome // HG-5 or equivalent
	}	

	DATA
	{
		type = double
		maxAp = @/targetBody.SphereOfInfluence() * 1.0    // 100% of planet body SOI
		//minRelayPower = 5000000 // HG-5 or equivalent
	}
	
	DATA
	{
		type 		= List<CelestialBody>
		validSearch	= [@/targetBody]
	}
	
	DATA
	{
		type			= List<Vessel>
		hidden			= true
		requiredValue 	= false
		bodyVessels		= AllVessels().Where(v => @validSearch.Contains(v.CelestialBody()))
		orbitVessels	= @bodyVessels.Where(v => v.IsOrbiting())
		validVessels	= @orbitVessels.Where(v => v.Orbit().Apoapsis() < @/maxAp && v.Orbit().Inclination() <= 2)
		validRelays		= @validVessels.Where(v => v.AntennaRelayPower() >= @/minRelayPower && v.VesselType() == Relay)
	}
	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name 		= Orbit
		type 		= Orbit
		checkType 	= UNMANNED
		title 		= Must have reached orbit about the moon.
	}

	REQUIREMENT
	{
		name		= Expression2
		type 		= Expression
		title 		= Need to maintain at least two relay network satellites in orbit, must have less than 2 Comm Relays in orbit.
		expression 	= @/validRelays.Count() < 2
	}

    REQUIREMENT
    {
        name = PartModuleTypeUnlocked
        type = PartModuleTypeUnlocked

        partModuleType = Antenna
        partModuleType = Generator
    }
	
	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
    PARAMETER
    {
        name = CommSatX
        type = VesselParameterGroup

        define = CommSatX
        disableOnStateChange = false

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = Needs to be a probe (uncrewed)
			minCrew = 0
			maxCrew = 0
		}

		PARAMETER
		{
			name = VesselIsType
			type = VesselIsType
		
			vesselType = Relay
		}
 
		PARAMETER
	    {
		    name = HasAntenna
		    type = HasAntenna
		    minAntennaPower = @/minRelayPower
		    antennaType = RELAY
		    notes = Don't forget to extend antennas that need extending!
	    }
		PARAMETER
        {
            name = Orbit
            type = Orbit

            // Minimum distance 
            minPeA = @/targetBody.Radius()

            // Pretty close to circular
            maxEccentricity = 0.004

            // Pretty close to equatorial
            maxInclination = 3
        }
    }  


	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//	

	
}

