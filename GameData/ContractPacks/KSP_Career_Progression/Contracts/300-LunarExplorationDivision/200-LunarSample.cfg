// *************************** Lunar Sample Return Mission
// 
// Goal is to send missions to collect sample and return for observation
//

CONTRACT_TYPE
{
	name 			= LunarSample
	sortKey 		= 200
	group 			= LunarExplorationDivision
	title			= Sample return mission from @/targetBody
	genericTitle 	= Sample return mission from the moon.
	topic			= Exploration
	notes			= Send a lander to the moon of @/targetBody and return the required sample for study
	synopsis 		= Send a lander to the moon of @/targetBody and return the required sample for study
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 5
	maxExpiry		= 100
	deadline		= 220
	maxCompletions 	= 0
	maxSimultaneous = 1
	targetBody		=  @/targetBodyValid1
	
	description 		= Send a probe to collect the required sample on @/targetBody and return home for analysis.
	genericDescription 	= Send a probe to collect some sample and return safely home.
	completedMessage	= Success!! We recovered the sample container and our team is busy studying the returned material!
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Career_Progression:rewardScience * 0.5				// Science Reward 
	rewardReputation	= @KSP_Career_Progression:rewardRep * 0.3					// Reputation Increase
	rewardFunds			= @KSP_Career_Progression:baseComp * 1.0					// Funds
	advanceFunds		= @KSP_Career_Progression:baseAdv * 0.5						// Adv Funds
	failureReputation 	= @rewardReputation * 0.3									// Reputation
	failureFunds		= @rewardFunds * 0.05										// Failure Funds
	
	// Contract Significance
	//
	prestige = Significant
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	//
	DATA_EXPAND
	{
		type 		= CelestialBody
		targetBody1	= @LunarExplorationDivision:homeMoonsSurface
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
		moontemp 			= @LunarExplorationDivision:homeMoonsSurface.First()
	}	
   DATA
    {
        type = List<ScienceExperiment>

        hidden = true

        experiments = [ mysteryGoo, crewReport, asteroidSample, surfaceSample ]
		experiments1 = @experiments
    }
    DATA
    {
		type = List<ScienceSubject>
        hidden = true

        scienceSubjectsTemp1 = AllScienceSubjectsByBodyExperiment([@targetBody], @experiments1)
		scienceSubjectsTemp2 = @scienceSubjectsTemp1.Where(s => s.Situation() == SrfLanded || s.Situation() == SrfSplashed)
		scienceSubjectsTemp3 = @scienceSubjectsTemp2.Where(s => !s.Experiment().ID().StartsWith("ROCScience_"))
		scienceSubjectsTemp4 = @scienceSubjectsTemp3.Where(s => s.RemainingScience() >= 0.5)

		scienceSubjects = @scienceSubjectsTemp4.Random(1)
    }

	// Science recovery: transmit, recover, or ideal.
    DATA
    {
		type = ScienceRecoveryMethod
        hidden = true

        recoveryMethod = Recover
    }

	DATA
    {
		type = Biome
        hidden = true
		title = Determine the biome target for the sample return
		biome1 = @scienceSubject.Biome()
    }	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name 		= Orbit
		type 		= Orbit
		checkType 	= UNMANNED
		title 		= Must have reached orbit about the moon.
	}
	REQUIREMENT
    {
        type = Expression
        expression = @/scienceSubjects.Count() >= 1

        title = Must have a valid experiment to perform in Low Orbit
    }
	REQUIREMENT
	{
		name 		= Landing
		type 		= Landing
		checkType 	= UNMANNED
	}
    REQUIREMENT
    {
		name = Any
		type = Any
		
		REQUIREMENT
		{
			name = PartUnlocked
			type = PartUnlocked
			part  = science_module
		}
		REQUIREMENT
		{
			name = PartUnlocked
			type = PartUnlocked
			part  = GooExperiment
		}


	}

	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
    PARAMETER
    {
        name = VesselParameterGroup
        type = VesselParameterGroup

        define = SampleReturn
        disableOnStateChange = false

		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			title = Needs to be a probe (uncrewed)
			minCrew = 0
			maxCrew = 0
		}
 		PARAMETER
        {
            name = Orbit
            type = Orbit
			title = Reach orbit around the moon of @/targetBody
			completeInSequence 	= true
        }
 		PARAMETER
        {
            name = ReachState
            type = ReachState
			title = Land on the surface of @/targetBody at the biome of @/biome1
			situation = LANDED
			completeInSequence 	= true
        }
		PARAMETER
		{
			name = CollectScience
			type = CollectScience

			//subject = @/scienceSubjects.Where(s => s.Situation() == @experimentSituation)
			biome = @scienceSubject.Biome()
			situation = @scienceSubject.Situation()
			experiment = @scienceSubject.Experiment()
			recoveryMethod = @/recoveryMethod
			rewardFunds = @/KSP_Career_Progression:baseComp * 0.6
			completedMessage = Objective Complete!  We collected @scienceSubject.Experiment() data!
			title 			= Collect science data from the @scienceSubject.Experiment() in @scienceSubject.Situation()
		
			disableOnStateChange = true
		
			ITERATOR
			{
				type = ScienceSubject
				scienceSubject = @/scienceSubjects
			}
			completeInSequence 	= true
		}

		PARAMETER
		{
			name = ReachState
			type = ReachState
			targetBody = HomeWorld()
			situation = SPLASHED
			situation = LANDED
			title = Return safely to the surface
			hideChildren = true
			completeInSequence 	= true
		}
		PARAMETER
		{
			name = VesselNotDestroyed
			type = VesselNotDestroyed
			situation = SPLASHED
			situation = LANDED
			title = Safely return the payload to the surface for recovery.
			completeInSequence = true
			completedMessage = Congratulations! We successfully recoved our payload on the surface.
			hideChildren = true
		}

	}


	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//	

	
}

