// *************************** Planetary Surface Exploration
// 
// Goal is to identify a biome and land a probe to collect and transmit science
//

CONTRACT_TYPE
{
	name 			= PlanetSurfaceExploration
	sortKey 		= 140
	group 			= PlanetaryScienceDivision
	title			= Surface landing on @/targetBody
	genericTitle 	= Land a probe on the surface to transmit science back home
	topic			= Exploration
	notes			= Land a probe within the target biome @/biomeSelect on @/targetBody.  Collect and transmit science.
	synopsis 		= Land a probe within the target biome @/biomeSelect on @/targetBody.  Collect and transmit science.
	cancellable		= false
	declinable 		= false
	autoAccept		= false
	minExpiry		= 5
	maxExpiry		= 100
	//deadline		= 400
	maxCompletions 	= 0
	maxSimultaneous = 1
	targetBody		=  @/targetBodyValid1
	
	description 		= We reached orbit but now we want to explore the surface of @/targetBody.  Land a probe within the biome of @/biomeSelect and transmit the required science back to mission control.
	genericDescription 	= Land a probe on the surface to transmit science back home
	completedMessage	= Success! We successfully gathered the science and trasmitted it back to mission control!
	
	// Contract Rewards
	//
	rewardScience		= @KSP_Career_Progression:rewardScience * 0.5				// Science Reward 
	rewardReputation	= @KSP_Career_Progression:rewardRep * 0.3					// Reputation Increase
	rewardFunds			= @KSP_Career_Progression:baseComp * 0.5					// Funds
	advanceFunds		= @KSP_Career_Progression:baseAdv * 0.4						// Adv Funds
	failureReputation 	= @rewardReputation * 0.3									// Reputation
	failureFunds		= @rewardFunds * 1.0										// Failure Funds
	
	// Contract Significance
	//
	//     Trivial
    //     Significant
    //     Exceptional
	//
	prestige = Trivial
	
	// ================================================================================================================
	//
	// ----------------------------------------------------------------------------------------------------------------
	// DATA Contract Configuration
	//
	//
	DATA_EXPAND
	{
		type 		= CelestialBody
		targetBody1	= @KSP_Career_Progression:systemPlanetsSurface
	}
	DATA
	{
		type				= CelestialBody
		requiredValue		= true
		targetBodyValid1	= @/targetBody1
	}	
	DATA
	{
		type 			= Biome
        hidden = true
		uniquenessCheck = CONTRACT_ACTIVE	
		biometemp		= @targetBody.Biomes().Where(sc => sc.RemainingScience() > 10).SelectUnique()
	}


	DATA
	{
		type 			= Biome
        hidden = true
		biomeSelect		= @/scienceSubjects.ElementAt(0).Biome()
		title 			= Determine the biome target for the experiments
	}
    DATA
    {
        type = List<ScienceExperiment>

        hidden = true

        experiments = AvailableExperiments(@targetBody).ExcludeAll([ evaReport, crewReport, asteroidSample, surfaceSample ])
		experiments1 = @experiments.Where(e => !e.ID().StartsWith("ROCScience_"))
		experiments2 = @experiments1.Random(4,8)
    }

	DATA
    {
		type = List<ScienceSubject>
        hidden = true

		//tempo = AllScienceSubjectsByBody(@/targetBody)
		//scienceSelect	= AllScienceSubjectsByBiome([@/biomeSelect]).Where(sc => sc.RemainingScience() >= 1.0 && (sc.Situation() == SrfLanded || sc.Situation() == SrfSplashed) ).Random(6)
        scienceSubjectsTemp1 = AllScienceSubjectsByBodyExperiment( [@/targetBody] , @experiments2 )
		scienceSubjectsTemp2 = @scienceSubjectsTemp1.Where(s => s.Situation() == SrfLanded || s.Situation() == SrfSplashed)
		scienceSubjectsTemp3 = @scienceSubjectsTemp2.Where(s => s.RemainingScience() >= 3.0)
		
		scienceSubjects = @scienceSubjectsTemp3.Random(3,5)
    }
	
	// Science recovery: transmit, recover, or ideal.
    DATA
    {
		type = ScienceRecoveryMethod
        hidden = true

        recoveryMethod = Transmit
    }
	
	
	// -----------------------------------------------------------------------------------------------------------------------
	// Contract Requirements
	//
	REQUIREMENT
	{
		name 	= All
		type	= All

		REQUIREMENT
		{
			name = Orbit
			type = Orbit
			checkType 	= UNMANNED
		}

		REQUIREMENT
		{
			type = Expression
			title = Must have valid experiments to run around the home planet.
			expression = @/scienceSubjects.Count() >= 1
		}

	}
	REQUIREMENT:NEEDS[SCANSAT]
	{
		name = SCANsatCoverage
		type = SCANsatCoverage
		scanType = Biome
		title = Must have completed the biome scan from orbit.
	}

	
	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Parameters
	//
	
 	PARAMETER
	{
		name = PlanetSurface
		type = VesselParameterGroup
		title = Send a probe to land on the surface of @/targetBody at the biome of @/biomeSelect to collect desired science data
		define = PlanetSurface
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
			title = Launch a New Vessel
			hideChildren = true
		}
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Needs to be a probe (uncrewed)
			hideChildren = true
		}
		PARAMETER
		{
			name = ReachState
			type = ReachState
			situation = LANDED
			disableOnStateChange = true
			title = Land on the surface of @targetBody
			completeInSequence 	= true
			hideChildren = false
		}
		PARAMETER
		{
			name = CollectScience
			type = CollectScience
			
			title = Collect @scienceSubject science at @/biomeSelect
			biome = @scienceSubject.Biome()
			situation = @scienceSubject.Situation()
			experiment = @scienceSubject.Experiment()
			recoveryMethod = @/recoveryMethod
			rewardFunds			= @KSP_Career_Progression:baseComp * 0.1               
			disableOnStateChange = true
			completeInSequence 	= true
		
			ITERATOR
			{
				type = ScienceSubject
				scienceSubject = @/scienceSubjects
			}
		}

	}



	// -----------------------------------------------------------------------------------------------------------------------
	//  Contract Behaviours
	//	

	
}

